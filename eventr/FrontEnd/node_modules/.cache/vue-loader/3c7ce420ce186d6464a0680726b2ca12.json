{"remainingRequest":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/src/views/searchEvent.vue?vue&type=style&index=0&id=46e6e6b0&scoped=true&lang=css&","dependencies":[{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/src/views/searchEvent.vue","mtime":1574038749918},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/css-loader/index.js","mtime":1573425212508},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1573425220137},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":1573425216374},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1573425220308},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1573425210912},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1573425220136}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.title{\n  text-align: center;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 0px;\n}\n\n.input{\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n.heading{\n  text-align: center;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 24px;\n  margin-bottom: 0px;\n}\n\n",{"version":3,"sources":["searchEvent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6NA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"searchEvent.vue","sourceRoot":"src/views","sourcesContent":["<template>\n<v-container>\n\n\n    <v-dialog v-model=\"testDialog\" max-width=\"50%\">\n      <v-card>\n        <v-card-title :style=\"{'background-color':'tomato','color':'white'}\" class=\"title\">{{searchedEvents}}</v-card-title>\n      </v-card>\n    </v-dialog>\n\n  <v-dialog v-model=\"eventDialog\" scrollable max-width=\"3000px\">  \n      <v-card>\n        <v-card-title :style = \"{'background-color':'tomato','color':'white'}\">Searched Parties</v-card-title>\n        <v-divider></v-divider>\n        <v-card-text style=\"height: 3000px;\">\n\n          <v-radio-group v-model=\"dialogm1\" column>    \n            <v-radio label=\"Bahamas, The\" value=\"bahamas\"></v-radio>     \n                <v-data-table\n                  :headers=\"headers\"\n                  :items=\"Event\"\n                  :items-per-page=\"3\"\n                  class=\"elevation-1\"\n                > </v-data-table>\n          \n          </v-radio-group>\n\n        </v-card-text>\n        <v-divider></v-divider>\n        <v-card-actions>\n          <v-btn color=\"blue darken-1\" text @click=\"eventDialog = false\">Close</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n\n    <v-dialog v-model=\"dateDialog\" max-width=\"50%\">\n      <v-card>\n        <v-card-title :style=\"{'background-color':'tomato','color':'white'}\" class=\"title\">When is it?</v-card-title>\n        <v-card-actions>\n          <v-date-picker landscape multiple full-width color=\"#ff6347\" v-model=\"searchProp['date']\" style=\"font-size:15px\" v-on:input=\"updateDateString\" ></v-date-picker>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <v-dialog v-model=\"locationDialog\" max-width=\"50%\">\n      <v-card>\n\n        <!-- title bar -->\n        <v-card-title :style=\"{'background-color':'tomato','color':'white'}\" class=\"title\">Where is it?</v-card-title>\n\n        <!-- input for the address -->\n        <v-card-text>\n          <v-layout row>\n          <v-text-field v-model=\"searchProp['location']['city']\"  class=\"input\" label=\"City\"></v-text-field>\n          <v-text-field v-model=\"searchProp['location']['state']\"  class=\"input\" label=\"State\"></v-text-field>\n          <v-text-field v-model=\"searchProp['location']['zip']\"  class=\"input\" label=\"Zip\"></v-text-field>\n          </v-layout>\n        </v-card-text>\n\n        <!-- this is the or... on the card -->\n        <v-card-text>\n          <div class=\"d-flex flex-row align-content-space-between\" >\n            <v-spacer/>\n            <span class=\"title\">or...</span>\n            <v-spacer/>\n          </div>\n        </v-card-text>\n\n        <!-- this is the container for the map. it is currently under dev and not fully finished -->\n        <v-card-text>\n          <div>\n            <p>you can also use this map...</p>\n            <div style=\"background-image: linear-gradient(to bottom right, green, #f06d06); height:200px\"></div>\n          </div>\n        </v-card-text>\n        \n      </v-card>\n    </v-dialog>\n\n<!-- Page Content -->\n<div flex justify-center align-center column>\n\n    <!-- title line -->\n    <h1 :style=\"{'display':'inline','font-weight':'bold','font-size':'48px'}\"><span class=\"heading\">Search for an Event </span></h1>\n    <i class=\"material-icons\" :style=\"{'font-size':'36px','position':'relative','top':'5px','color':'tomato', 'padding-bottom': '25px'}\">whatshot</i>\n\n    <!-- content section   -->\n    <v-layout column>\n        <!-- event name field -->\n        <v-text-field v-model=\"searchProp['name']\" class=\"input\" id=\"name\" label=\"Event Name\" outlined color=\"#ff6347\"></v-text-field>\n        <v-text-field v-model=\"searchProp['creator']\" class=\"input\" id=\"creator\" label=\"Event Creator\" outlined color=\"#ff6347\"></v-text-field>\n\n        <v-select v-model=\"searchProp['style']\" :items=\"Events\" multiple outlined class=\"input\" label=\"Event Type\" color=\"#ff6347\"></v-select>\n\n        <!-- Buttons -->\n        <v-layout row style=\"margin-bottom:20px\">\n          <v-spacer/>\n          <v-btn color=\"#ff6347\" :style=\"{'color':'#ffffff'}\" @click=\"dateDialog = true;\">{{eventDateString}}</v-btn>\n          <v-spacer/>\n          <v-btn color=\"#ff6347\" :style=\"{'color':'#ffffff'}\" @click=\"locationDialog = true;\">{{eventLocation}}</v-btn>\n          <v-spacer/>\n        </v-layout>\n        \n        <v-btn color=\"#ff6347\" :style=\"{'color':'#ffffff'}\" @click=\"searchEvent\">Submit</v-btn>\n    </v-layout>\n</div>\n</v-container>\n</template>\n\n\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  // name of the file/component\n  name: 'searchEvent',\n\n  computed : { ...mapState(['searchedEvents']) },\n\n  // all the initial data for the component.\n  data () {\n    return {\n      // data that will be changed by the user\n      searchProp:{\n        'name': \"\",\n        'location': {\n          'address1':\"\",\n          'address2':\"\",\n          'city':\"\",\n          'state':\"\",\n          'zip':\"\",\n          'lat':0,\n          'long':0\n        },\n        'date': [],\n        'style': [],\n        'description': \"\",\n        'rsvp': false,\n        'creator': \"\",\n        'attendees': []\n      },\n      headers: [\n          {\n            text: 'Current Events',\n            align: 'left',\n            sortable: false,\n            value: 'name',\n          },\n          { text: 'Location', value: 'location' },\n          { text: 'Name', value: 'name' },\n          { text: 'Type', value: 'creator' },\n          { text: 'Date', value: 'Date' },\n        \n        ],\n        Events: [\n         \n        ],\n  \n      // used for displaying the date to the user\n      eventLocation: \"search around your area\",\n      eventDateString: \"choose a date range\",\n\n      // data used to control page flow\n      locationDialog: false,\n      dateDialog: false,\n      testDialog: false,\n      eventDialog: false,\n\n      // data used for the user to select from\n      Events: [\n        \"Birthday\",\n        \"Get Together\",\n        \"Wedding\",\n        \"Formal Event\"\n      ]\n    }\n  },\n\n  // this section is to watch variables. Anytime a variable with a corresponding\n  // name changes value, the function will run. the val that is passed into\n  // every function is the new value that will be set.\n  watch :{\n\n  },\n\n  // this is the methods portion. This is used to hold functions that our page will use.\n  methods :{\n\n    updateDateString(){\n      let i;\n      let eventsAmu = 0;\n\n      for (i = 0; i < this.searchProp.date.length; i++){\n        eventsAmu++;\n      }\n\n      // gets the new date that was chosen\n      let tempDate = new Date(this.searchProp.date);\n      tempDate.setDate( tempDate.getDate() + 1 );\n\n      // sets the display variable so the user can see what they chose\n      this.eventDateString = tempDate.toDateString();\n      \n    },\n\n    searchEvent(){\n      console.info(\"i am searching\")\n      this.$store.dispatch('search_event', this.searchProp); \n      //console.log(\"response: \", this.returnedEvents)\n      this.searchedEvents;\n      this.testDialog = true;\n      this.eventDialog = true;\n\n    }\n  }\n}\n</script>\n\n\n<style scoped>\n  .title{\n    text-align: center;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 0px;\n  }\n\n  .input{\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n\n  .heading{\n    text-align: center;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n    margin-bottom: 0px;\n  }\n\n</style>\n"]}]}