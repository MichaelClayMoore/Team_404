{"remainingRequest":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/src/views/eventCreator.vue?vue&type=style&index=0&id=59ccaf68&scoped=true&lang=css&","dependencies":[{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/src/views/eventCreator.vue","mtime":1573418311836},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/PAX/Documents/GitHub/Team_404/eventr/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* style for elements that have the title clas */\n.title{\n  /* sets text to center and a bold 24px Montserrat font */\n  text-align: center;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 24px;\n  font-weight: bold;\n\n  /* removes bottom margin */\n  margin-bottom: 0px;\n}\n\n/* style for imput class */\n.input{\n  /* adds 5px to left and right of element */\n  margin-left: 5px;\n  margin-right: 5px;\n}\n\n/* style for heading class */\n.heading{\n  /* sets text to center and a 24px Montserrat font*/\n  text-align: center;\n  font-family: 'Montserrat', sans-serif;\n  font-size: 24px;\n\n  /* removes margins from the bottom */\n  margin-bottom: 0px;\n}\n\n",{"version":3,"sources":["eventCreator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"eventCreator.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <v-container>\n\n    <!--\n    ______ date dialog _________________________________________________________________\n    | this is the date dialog. this will appear when the date button.                  |\n    | v-model = dateDialog                                                             |\n    |     -> this is what allows this to be visible. if yes, it will be visible.       |\n    |        otherwise it is hidden.                                                   |\n    L__________________________________________________________________________________|\n    -->\n    <v-dialog v-model=\"dateDialog\" max-width=\"50%\">\n      <v-card>\n        <v-card-title :style=\"{'background-color':'tomato','color':'white'}\" class=\"title\">When is it?</v-card-title>\n        <v-card-actions>\n          <v-date-picker landscape full-width color=\"#ff6347\" v-model=\"eventProp['date']\" style=\"font-size:15px\" v-on:input=\"updateDateString\" ></v-date-picker>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!--\n    ______ location dialog _____________________________________________________________\n    | this is the location dialog. this will appear when the location button.          |\n    | v-model = locationDialog                                                         |\n    |     -> this is what allows this to be visible. if yes, it will be visible.       |\n    |        otherwise it is hidden.                                                   |\n    L__________________________________________________________________________________|\n    -->\n    <v-dialog v-model=\"locationDialog\" max-width=\"50%\">\n      <v-card>\n\n        <!-- title bar -->\n        <v-card-title :style=\"{'background-color':'tomato','color':'white'}\" class=\"title\">Where is it?</v-card-title>\n\n        <!-- input for the address -->\n        <v-card-text>\n          <v-layout row>\n          <v-text-field v-model=\"eventProp['location']['address1']\" class=\"input\" label=\"Address 1\"></v-text-field>\n          <v-text-field v-model=\"eventProp['location']['address2']\"  class=\"input\" label=\"Address 2 (optional)\"></v-text-field>\n          <v-text-field v-model=\"eventProp['location']['city']\"  class=\"input\" label=\"City\"></v-text-field>\n          <v-text-field v-model=\"eventProp['location']['state']\"  class=\"input\" label=\"State\"></v-text-field>\n          <v-text-field v-model=\"eventProp['location']['zip']\"  class=\"input\" label=\"Zip\"></v-text-field>\n          </v-layout>\n        </v-card-text>\n\n        <!-- this is the or... on the card -->\n        <v-card-text>\n          <div class=\"d-flex flex-row align-content-space-between\" >\n            <v-spacer/>\n            <span class=\"title\">or...</span>\n            <v-spacer/>\n          </div>\n        </v-card-text>\n\n        <!-- this is the container for the map. it is currently under dev and not fully finished -->\n        <v-card-text>\n          <div>\n            <p>you can also use this map...</p>\n            <div style=\"background-image: linear-gradient(to bottom right, green, #f06d06); height:200px\"></div>\n          </div>\n        </v-card-text>\n\n      </v-card>\n    </v-dialog>\n\n    <!-- this is where the full page starts -->\n    <div flex justify-center align-center column>\n\n      <!-- title line -->\n      <h1 :style=\"{'display':'inline','font-weight':'bold','font-size':'48px'}\"><span class=\"heading\">Create a Event </span></h1>\n      <i class=\"material-icons\" :style=\"{'font-size':'36px','position':'relative','top':'5px','color':'tomato'}\">whatshot</i>\n\n      <!-- content section   -->\n      <v-layout column>\n\n        <!-- event name field -->\n        <v-text-field v-model=\"eventProp['name']\" class=\"input\" id=\"name\" label=\"Event Name\" color=\"#ff6347\"></v-text-field>\n\n        <!-- both the location and date buttons. -->\n        <v-layout row style=\"margin-bottom:20px\">\n          <v-spacer/>\n          <v-btn color=\"#ff6347\" :style=\"{'color':'#ffffff'}\" @click=\"dateDialog = true;\">{{eventDateString}}</v-btn>\n          <v-spacer/>\n          <v-btn color=\"#ff6347\" :style=\"{'color':'#ffffff'}\" @click=\"locationDialog = true;\">{{eventLocation}}</v-btn>\n          <v-spacer/>\n        </v-layout>\n\n\n        <!--\n        ______ Event style selector ________________________________________________________\n        | this is the style selector. the user will only be able to select one of the      |\n        | provided items in the Events variable.                                           |\n        | v-model = eventStyle                                                             |\n        |     -> this is what hold the value of what they select. originally set to the    |\n        |        empty string. it will be replaced with whatever value they select.        |\n        L__________________________________________________________________________________|\n      -->\n      <v-select v-model=\"eventProp['style']\" :items=\"Events\" filled rounded class=\"input\" label=\"Event Type\" color=\"#ff6347\"></v-select>\n\n        <!-- tell us a little about section -->\n        <Span class=\"heading\"> Tell us a little about it.</Span>\n        <v-textarea v-model=\"eventProp['description']\" color=\"#ff6347\" filled clearable></v-textarea>\n\n        <!--\n         ______ invite people field ________________________________________________________\n        | this is where they will be able to invite friends.                               |\n        | this is something to be implemented when friends are added to our site           |\n        | as well as our database.                                                         |\n        L__________________________________________________________________________________|\n        -->\n        <v-text-field color=\"#ff6347\" label=\"Invite people\" hint=\"Enter the username of your friend or someone you know.\"></v-text-field>\n\n        <!-- rsvp checkbox -->\n        <div class=\"d-flex flex-row align-content-space-between\" >\n          <v-spacer/>\n          <v-checkbox v-model=\"eventProp['rsvp']\" class=\"flex-grow-1 flex-shrink-0\" label=\"RSVP Required\" color=\"#ff6347\"></v-checkbox>\n        </div>\n\n        <!-- submit button. the @click will trigger the submit function in the methods section -->\n        <v-btn color=\"#ff6347\" :style=\"{'color':'#ffffff'}\" @click=\"createEvent\">Submit</v-btn>\n\n      </v-layout>\n  </div>\n</v-container>\n</template>\n\n<!--\n______ script portion ______________________________________________________________\n| this is the portion of the file that has to deal with all the javascript.        |\nL__________________________________________________________________________________|\n-->\n<script>\nimport {mapState} from 'vuex'\n\nexport default {\n  // name of the file/component\n  name: 'eventCreator',\n\n  computed : {  },\n\n  // all the initial data for the component.\n  data () {\n    return {\n      // data that will be changed by the user\n      eventProp:{\n        'name': \"\",\n        'location': {\n          'address1':\"\",\n          'address2':\"\",\n          'city':\"\",\n          'state':\"\",\n          'zip':\"\",\n          'lat':0,\n          'long':0\n        },\n        'date': new Date().toISOString().substr(0,10),\n        'style': \"\",\n        'description': \"\",\n        'rsvp':false,\n        'attendees': []\n\n      },\n\n      // used for displaying the date to the user\n      eventLocation: \"choose a location\",\n      eventDateString: \"choose a date\",\n\n      // data used to control page flow\n      locationDialog: false,\n      dateDialog: false,\n\n      // data used for the user to select from\n      Events: [\n        \"Birthday\",\n        \"Get Together\",\n        \"Wedding\",\n        \"Formal Event\"\n      ]\n    }\n  },\n\n  mounted(){\n    this.$store.dispatch('get_test')\n  },\n\n  // this section is to watch variables. Anytime a variable with a corresponding\n  // name changes value, the function will run. the val that is passed into\n  // every function is the new value that will be set.\n  watch :{\n    // currently none\n  },\n\n  // this is the methods portion. This is used to hold functions that our\n  // page will use.\n  methods :{\n\n    // this function is for finalizing the event object and pushing it to the\n    // store. it currently does not do anything - we need to implement the store\n    // first.\n    createEvent(){\n      console.info(\"i am submitting\")\n      this.$store.dispatch('save_event', this.eventProp)\n    },\n\n    // this function will run when the input event is emitted from the date\n    // picker. it is responsible for changing the text on the button.\n    updateDateString(){\n\n      // hide the dialog because they have choosen now.\n      this.dateDialog = false;\n\n      // gets the new date that was chosen\n      let tempDate = new Date(this.eventProp.date);\n      tempDate.setDate( tempDate.getDate() + 1 )\n\n      // sets the display variable so the user can see what they chose\n      this.eventDateString = tempDate.toDateString();\n    }\n  }\n}\n</script>\n\n<!--\n______ style _portion ______________________________________________________________\n| this is the portion of the file that has to deal with all the defined css styles.|\n| the scoped prop says that any style defined here is only defined here.           |\nL__________________________________________________________________________________|\n-->\n<style scoped>\n\n  /* style for elements that have the title clas */\n  .title{\n    /* sets text to center and a bold 24px Montserrat font */\n    text-align: center;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n    font-weight: bold;\n\n    /* removes bottom margin */\n    margin-bottom: 0px;\n  }\n\n  /* style for imput class */\n  .input{\n    /* adds 5px to left and right of element */\n    margin-left: 5px;\n    margin-right: 5px;\n  }\n\n  /* style for heading class */\n  .heading{\n    /* sets text to center and a 24px Montserrat font*/\n    text-align: center;\n    font-family: 'Montserrat', sans-serif;\n    font-size: 24px;\n\n    /* removes margins from the bottom */\n    margin-bottom: 0px;\n  }\n\n</style>\n"]}]}